// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int           @id @default(autoincrement())
  name          String
  description   String
  price         Float
  salePrice     Float?
  category      String
  colors        String[]
  sizes         String[]
  collaborateur String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  images        ProductImage[]
  orderItems    OrderItem[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String   @db.Text // Base64 encoded image data
  mimeType  String   // Image MIME type (e.g., image/jpeg, image/png)
  isMain    Boolean  @default(false)
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Order {
  id          Int         @id @default(autoincrement())
  customerName String
  phoneNumber String
  address     String
  totalAmount Float
  status      OrderStatus @default(PENDING)
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  size      String?
  color     String?
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
